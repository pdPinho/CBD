#a

Person - svn_id real_name
Project - name
Organization - name

[Person] - [Working on] -> [Project] - role_on_project, num
[Person] - [Works for] -> [Organization]


#b
LOAD CSV WITH HEADERS FROM "file:///git_selection.csv" AS row
MERGE (p:Person {id: row.svn_id, name: row.real_name})
MERGE (pj:Project {name: row.project_name})
MERGE (o:Organization {name: row.organization})

CREATE (p)-[:WORKING_ON {number: row.number, role: row.role_on_project}]->(pj)
CREATE (p)-[:WORKS_FOR]->(o);



#c
// Não consegui entender se neste caso quando pede a informação também é necessário colocar 
// se ele trabalha para algo ou se não...
#1
MATCH (n:Person) 
RETURN n


#2 
MATCH (n:Person) 
RETURN DISTINCT n.name


#3
MATCH (:Person)-[:WORKING_ON]->(p:Project)
RETURN DISTINCT p


#4
MATCH (p:Person)-[:WORKING_ON]->(pj:Project)
WITH p.name as name, COUNT(pj) as numberProjects
RETURN DISTINCT name, numberProjects


#5
MATCH (p:Person)-[:WORKING_ON]->(pj:Project)
WITH p.name as name, COUNT(pj) as numberProjects
RETURN DISTINCT name, numberProjects
ORDER BY numberProjects DESC


#6
MATCH (pj:Project)<-[:WORKING_ON]-(p:Person)
WITH p.name as name, pj
Return DISTINCT pj, COUNT(name)


#7
MATCH (pj:Project)<-[r:WORKING_ON]-(p:Person)
WHERE r.role = "Committer"
WITH p.name as name, pj
Return DISTINCT pj, COUNT(name)


#8
MATCH (p1:Person)-[:WORKING_ON]->(pj:Project)<-[:WORKING_ON]-(p2:Person)
WHERE p1.id = "atm"
RETURN p1.name, p2.name, pj.name


#9
MATCH (p1:Person)-[r1:WORKING_ON]->(pj:Project)<-[r2:WORKING_ON]-(p2:Person)
WHERE p1.id = "atm" AND r1.role = "PMC" AND r2.role = "Committer"
RETURN p1.name, p2.name, pj.name
